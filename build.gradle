import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'maven-publish'
    id "com.github.ben-manes.versions" version "0.28.0"
    id "com.wynprice.cursemaven" version "2.1.1"
}

group 'org.cultofclang.minecraft'
version '1.3.72'

sourceCompatibility = 1.8
targetCompatibility = 1.8

if (System.getenv("GITHUB_RUN_NUMBER") != null) {
    version += "-" + System.getenv("GITHUB_RUN_NUMBER")
} else {
    version += "-DEV"
}

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }

    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
}

dependencyUpdates.gradleReleaseChannel = "current"

dependencies {
    //compileOnly 'worldedit:worldedit-bukkit-7.1.0:release:universal'
    compileOnly 'org.bukkit:bukkit:1.15.2-R0.1-SNAPSHOT'
    yum "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0"
    yum "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    yum "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.3.7"
    yum "org.nield:kotlin-statistics:1.2.1"
    yum "com.charleskorn.kaml:kaml:0.17.0"
    yum "org.jetbrains.exposed:exposed-dao:0.25.1"
    yum "org.jetbrains.exposed:exposed-jdbc:0.25.1"
    yum "org.xerial:sqlite-jdbc:3.31.1"
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
}

shadowJar {
    mergeServiceFiles()
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/MineInAbyss/KotlinSpice/")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("PASSWORD")
            }
        }
    }
    publications {
        maven(MavenPublication) {
            from components.java
        }
        /*
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
            artifactId = 'kotlinspice-impl'
        }
         */
    }
}

if (project.hasProperty("plugin_path") && plugin_path) {
    task copyJar(type: Copy) {
        from shadowJar
        into plugin_path
    }
    shadowJar.finalizedBy(copyJar)
    build.dependsOn copyJar
}

void yum(String s) {
    dependencies.api(s)
    //i want these to be system, but this make the pom be runtime :(
    // but this is hacky anyhow
    // dependencies.shadow(s)
}