import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'org.jetbrains.kotlin.jvm' version '1.3.70'
    id 'maven-publish'
}

group 'org.cultofclang.minecraft'
version '0.1'

if (System.getenv("GITHUB_RUN_NUMBER")!=null) {
    version += "." + System.getenv("GITHUB_RUN_NUMBER")
}

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
}

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compileOnly 'org.bukkit:bukkit:1.15.2-R0.1-SNAPSHOT'

    //this is shit

    yum "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0"
    yum "org.jetbrains.exposed:exposed-core:0.+"
    yum "org.jetbrains.exposed:exposed-dao:0.+"
    yum "org.jetbrains.exposed:exposed-jdbc:0.+"

    yum "org.xerial:sqlite-jdbc:3.+"
    yum "org.slf4j:slf4j-api:1.+"
    yum 'com.sksamuel.hoplite:hoplite-yaml:1.+'
    yum "com.github.andrewoma.kwery:core:0.+"
    yum "com.github.andrewoma.kwery:mapper:0.+"
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
}

shadowJar {
    mergeServiceFiles()
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/CultOfClang/Minecraft/")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("PASSWORD")
            }
        }
    }
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
        }
    }
}

if (project.hasProperty("plugin_path") && plugin_path) {
    task copyJar(type: Copy) {
        from shadowJar
        into plugin_path
    }
    shadowJar.finalizedBy(copyJar)
}

def void yum(String s) {
    dependencies.implementation(s)
    dependencies.shadow(s)
}